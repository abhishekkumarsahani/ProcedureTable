ALTER PROCEDURE sp_assign_bus (
    @UserID INT,
    @ImeiID NVARCHAR(60),
    @SchID INT,
    @BusID INT,
    @PickupLocation VARCHAR(100) = NULL,
    @DropoffLocation VARCHAR(100) = NULL,
    @Flag CHAR(1),
    @Students XML
)
AS
BEGIN
    SET NOCOUNT ON;

    DECLARE @today DATETIME = GETDATE();
    DECLARE @AssignBusID BIGINT;
    DECLARE @temp TABLE(ID INT IDENTITY(1,1) PRIMARY KEY, StudentID INT);
    DECLARE @i INT;
    DECLARE @count INT;
    DECLARE @StudentID INT;

    IF @Flag = 'I'
    BEGIN
        -- Insert a new assignment
        INSERT INTO tbl_bus_assignment (UserID, ImeiID, SchID, BusID, PickupLocation, DropoffLocation, Flag, created_by, updated_by, created_date, updated_date)
        VALUES (@UserID, @ImeiID, @SchID, @BusID, @PickupLocation, @DropoffLocation, @Flag, @UserID, @UserID, @today, @today);

        SET @AssignBusID = SCOPE_IDENTITY();

        -- Parse and insert students
        INSERT INTO @temp
        SELECT StudentID = Node.Data.value('(StudentID)[1]', 'INT')
        FROM @Students.nodes('/Students/Student') AS Node(Data);

        SET @i = 1;
        SET @count = (SELECT COUNT(1) FROM @temp);

        WHILE (@count != 0)
        BEGIN
            SET @StudentID = (SELECT StudentID FROM @temp WHERE ID = @i);
            
            INSERT INTO tbl_bus_assignment_students (AssignBusID, StudentID)
            VALUES (@AssignBusID, @StudentID);

            SET @i = @i + 1;
            SET @count = @count - 1;
        END;
    END
    ELSE IF @Flag = 'U'
    BEGIN
        -- Update existing assignment
        SET @AssignBusID = (SELECT TOP 1 AssignBusID FROM tbl_bus_assignment WHERE UserID = @UserID AND BusID = @BusID AND SchID = @SchID AND is_del = 'N');
        
        IF @AssignBusID IS NOT NULL
        BEGIN
            UPDATE tbl_bus_assignment
            SET ImeiID = @ImeiID,
                PickupLocation = @PickupLocation,
                DropoffLocation = @DropoffLocation,
                Flag = @Flag,
                updated_by = @UserID,
                updated_date = @today
            WHERE AssignBusID = @AssignBusID;

            -- Parse and update students
            DELETE FROM tbl_bus_assignment_students WHERE AssignBusID = @AssignBusID;

            INSERT INTO @temp
            SELECT StudentID = Node.Data.value('(StudentID)[1]', 'INT')
            FROM @Students.nodes('/Students/Student') AS Node(Data);

            SET @i = 1;
            SET @count = (SELECT COUNT(1) FROM @temp);

            WHILE (@count != 0)
            BEGIN
                SET @StudentID = (SELECT StudentID FROM @temp WHERE ID = @i);
                
                INSERT INTO tbl_bus_assignment_students (AssignBusID, StudentID)
                VALUES (@AssignBusID, @StudentID);

                SET @i = @i + 1;
                SET @count = @count - 1;
            END;
        END
        ELSE
        BEGIN
            -- Assignment not found
            SELECT 201 AS StatusCode, 'Assignment not found' AS Message;
            RETURN;
        END
    END
    ELSE IF @Flag = 'R'
    BEGIN
        -- Remove the assignment
        SET @AssignBusID = (SELECT TOP 1 AssignBusID FROM tbl_bus_assignment WHERE UserID = @UserID AND BusID = @BusID AND SchID = @SchID AND is_del = 'N');
        
        IF @AssignBusID IS NOT NULL
        BEGIN
            UPDATE tbl_bus_assignment
            SET is_del = 'Y',
                updated_by = @UserID,
                updated_date = @today
            WHERE AssignBusID = @AssignBusID;
        END
        ELSE
        BEGIN
            -- Assignment not found
            SELECT 201 AS StatusCode, 'Assignment not found' AS Message;
            RETURN;
        END
    END
    ELSE IF @Flag = 'S'
    BEGIN
        -- View the assignment details
        SELECT 
            a.AssignBusID,
            a.UserID,
            a.ImeiID,
            a.SchID,
            a.BusID,
            a.PickupLocation,
            a.DropoffLocation,
            a.Flag,
            a.created_by,
            a.updated_by,
            a.created_date,
            a.updated_date,
            s.StudentID
        FROM tbl_bus_assignment a
        JOIN tbl_bus_assignment_students s ON a.AssignBusID = s.AssignBusID
        WHERE a.SchID = @SchID
        AND a.BusID = @BusID
        AND a.is_del = 'N';
    END

    -- Return success message
    SELECT 200 AS StatusCode, 'Success' AS Message;
END;
